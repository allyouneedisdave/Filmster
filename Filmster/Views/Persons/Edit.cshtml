@model Filmster.Models.ViewModels.PersonViewModel

@{
    ViewBag.Title = "Edit";
}

<h2 class="h2-adjusted">Edit @Model.ThisPerson.PersonFullName</h2>


@using (Html.BeginForm("Edit", "Persons", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ThisPerson.PersonId)
    @Html.HiddenFor(model => model.ThisPersonImage.ImageId)

    @if (Model.ThisPersonImage.ImageBytes != null)
    {
        //Convert the image bytes into a png for displaying on the page.
        <img src="@String.Format("data:image/png;base64,{0}", Convert.ToBase64String(Model.ThisPersonImage.ImageBytes))" />
    }

    <div class="form-group">
        @Html.Label("Change This Image", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" id="Image" name="upload" />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ThisPerson.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ThisPerson.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ThisPerson.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ThisPerson.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ThisPerson.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ThisPerson.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ThisPerson.IsActor, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.ThisPerson.IsActor)
                @Html.ValidationMessageFor(model => model.ThisPerson.IsActor, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ThisPerson.IsDirector, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.ThisPerson.IsDirector)
                @Html.ValidationMessageFor(model => model.ThisPerson.IsDirector, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ThisPerson.Biography, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ThisPerson.Biography, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ThisPerson.Biography, "", new { @class = "text-danger" })
        </div>
    </div>

    <hr />
    <p>Acting History</p>
    <p> @Html.ActionLink("Add An Acting Role", "Create", "FilmPersonRoles", new { filmId = "0", personId = Model.ThisPerson.PersonId, isActor = true }, null)</p>


    @if (Model.ThisFilmPersonRolesViewModel.Count > 0)
    {
        foreach (var role in Model.ThisFilmPersonRolesViewModel)
        {
            if (role.ThisFilmPersonRole.IsActor == true)
            {
                <p>@Html.ActionLink(role.ThisFilm.Title.ToString(), "Details", "Films", new { id = role.ThisFilm.FilmId }, null)</p>
            }

        }
    }



    <hr />
    <p>Directing History</p>
    <p> @Html.ActionLink("Add A Directing Role", "Create", "FilmPersonRoles", new { filmId = "0", personId = Model.ThisPerson.PersonId, isActor = false }, null)</p>

    @if (Model.ThisFilmPersonRolesViewModel.Count > 0)
    {
        foreach (var role in Model.ThisFilmPersonRolesViewModel)
        {
            if (role.ThisFilmPersonRole.IsDirector == true)
            {
                <p> @Html.ActionLink(role.ThisFilm.Title.ToString(), "Details", "Films", new { id = role.ThisFilm.FilmId }, null)</p>
            }

        }
    }



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>



</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
