@model IEnumerable<Filmster.Models.ViewModels.FilmViewModel>

@{
    ViewBag.Title = "Index";
}

<script type="text/javascript">
    $(document).ready(function () {
        //find the control with name searchString
        //and apply autocomplete plugin
        $("[name='searchString']").autocomplete({
            //get data from Search action
            source: '@Url.Action("Search")',
            //search when min 2 characters entered
            minLength: 2,
            //when option.selected
            select: function (event, ui) {
                //go to the Details action and append the id
                //from the JSON results
                window.location = '@Url.Action("Details")'
                    + '/' + ui.item.id
            }
        });
    })
</script>

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@using (Html.BeginForm())
{
    <p>
        Find by title: @Html.TextBox("searchString")
        <input type="submit" value="Search" />
    </p>
}

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.ThisFilmImage.ImageBytes)
        </th>
        <th>
            @Html.ActionLink("Film Title", "Index",
                        new { sortOrder = ViewBag.TitleSortParam})
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ThisCertificate.CertificateName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ThisFilm.Synopsis)
        </th>
        
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @if (item.ThisFilmImage.ImageBytes != null)
            {
                //Convert the image bytes into a png for displaying on the page.
                <img height="100px"; src="@String.Format("data:image/png;base64,{0}", Convert.ToBase64String(item.ThisFilmImage.ImageBytes))" />
            }
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ThisFilm.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ThisCertificate.CertificateName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ThisFilm.Synopsis)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ThisFilm.FilmId }) |
            @Html.ActionLink("Details", "Details", new { id=item.ThisFilm.FilmId }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ThisFilm.FilmId })
        </td>
    </tr>
}

</table>
