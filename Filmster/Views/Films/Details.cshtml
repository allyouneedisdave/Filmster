@model Filmster.Models.ViewModels.FilmViewModel

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>Film</h4>
    <hr />
    <dl class="dl-horizontal">


        @*<dt>
            @Html.DisplayNameFor(model => model.ThisFilm.Title)
        </dt>*@

        <dd>
            @Html.DisplayFor(model => model.ThisFilm.Title)
        </dd>

        @*<dt>
            @Html.DisplayNameFor(model => model.ThisFilmImage.ImageBytes)
        </dt>*@

        @if (Model.ThisFilmImage.ImageBytes != null)
        {
            //Convert the image bytes into a png for displaying on the page.
            <img src="@String.Format("data:image/png;base64,{0}", Convert.ToBase64String(Model.ThisFilmImage.ImageBytes))" />
        }


        @*<dt>
            @Html.DisplayNameFor(model => model.ThisFilm.Synopsis)
        </dt>*@

        <dd>
            @Html.DisplayFor(model => model.ThisFilm.Synopsis)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ThisGenre.genre)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ThisGenre.genre)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ThisCertificate.CertificateName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ThisCertificate.CertificateName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ThisFilm.ReleaseDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ThisFilm.ReleaseDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ThisFilm.Runtime)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ThisFilm.Runtime)
        </dd>

        <br />


        @foreach (var review in Model.ThisFilmReviews)
        {


            <dt>
                @Html.DisplayNameFor(model => review.thisUser.username)
            </dt>

            <dd>
                @Html.DisplayFor(model => review.thisUser.username)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => review.thisReview.ReviewTitle)
            </dt>

            <dd>
                @Html.DisplayFor(model => review.thisReview.ReviewTitle)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => review.thisReview.ReviewTitle)
            </dt>

            <dd>
                @Html.DisplayFor(model => review.thisReview.ReviewTitle)
            </dd>


        }

        <br />
        <h5>Director</h5>
        @foreach (var role in Model.ThisFilmPersonRoleViewModel)
        {
            if (role.ThisFilmPersonRole.IsActor == true)
            {
                <dd>
                    @Html.DisplayFor(model => role.ThisPerson.FirstName)
                </dd>
                <dd>
                    @Html.DisplayFor(model => role.ThisPerson.LastName)
                </dd>
                <dd>
                    <img src="@String.Format("data:image/png;base64,{0}", Convert.ToBase64String(role.ThisPersonImage.ImageBytes))" />
                </dd>

            }
        }
        <h5>Actors</h5>
        @foreach (var role in Model.ThisFilmPersonRoleViewModel)
        {
            if (role.ThisFilmPersonRole.IsDirector == true)
            {
                <dd>
                    @Html.DisplayFor(model => role.ThisPerson.FirstName)
                </dd>
                <dd>
                    @Html.DisplayFor(model => role.ThisPerson.LastName)
                </dd>
                <dd>
                    <img src="@String.Format("data:image/png;base64,{0}", Convert.ToBase64String(role.ThisPersonImage.ImageBytes))" />
                </dd>

            }
        }



    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.ThisFilm.FilmId }) |
    @Html.ActionLink("Back to List", "Index")
</p>
