@model Filmster.Models.ViewModels.FilmViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Film</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ThisFilm.FilmId)


    <div class="form-group">
        @Html.LabelFor(model => model.ThisFilm.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ThisFilm.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ThisFilm.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    @if (Model.ThisFilmImage.ImageBytes != null)
    {
        //Convert the image bytes into an image for displaying on the page.
        <img src="@String.Format("data:image/png;base64,{0}", Convert.ToBase64String(Model.ThisFilmImage.ImageBytes))" />
    }


    @Html.ActionLink("Add a new image", "Create", "FilmImages", new { id = Model.ThisFilmImage.ImageId }, null)


    <div class="form-group">
        @Html.LabelFor(model => model.ThisFilm.Synopsis, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ThisFilm.Synopsis, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ThisFilm.Synopsis, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ThisFilm.Runtime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ThisFilm.Runtime, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ThisFilm.Runtime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="GenreID">Genre</label>
        <div class="col-md-10">
            @Html.DropDownList("Genres")
            @Html.ValidationMessageFor(model => model.ThisFilm.GenreId, "", new { @class = "text-danger" })
            
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="CertificateId">Certificate</label>
        <div class="col-md-10">
            @Html.DropDownList("Certificates")
            @Html.ValidationMessageFor(model => model.ThisFilm.CertificateId, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.ThisFilm.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ThisFilm.ReleaseDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ThisFilm.ReleaseDate, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.ThisFilm.ReleaseDate,
       htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.ThisFilm.ReleaseDate, "{0:yyy-MM-dd}",
                            htmlAttributes: new { @type = "date" })
            @Html.ValidationMessageFor(model => model.ThisFilm.ReleaseDate, "",
           new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
