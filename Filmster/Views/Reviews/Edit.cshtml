@model Filmster.Models.ViewModels.ReviewViewModel

@{
    ViewBag.Title = "Edit Review For " + Model.thisFilm.Title;
}

<!--Script for star rating-->
    <script type="text/javascript">
        $(document).ready(function () {
            //for each of the Rating dropdowns...
            $('.Rating').each(function () {
                //get the value of the id from the hidden field
                //next to it
                var selectedId = $(this).next().val();
                //now apply this as the selected id to the current
                //dropdown box
                $(this).val(selectedId);
            });

            //now apply the plugin
            $('.Rating').barrating({
                theme: 'fontawesome-stars'
            });
        })

    </script>

<h2>Edit Review For @Model.thisFilm.Title</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Review</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.thisReview.ReviewId)
    @Html.HiddenFor(model => model.thisReview.CreatedDate)
    @Html.HiddenFor(model => model.thisReview.FilmId)
    @Html.HiddenFor(model => model.thisReview.Rating)
    @Html.HiddenFor(model => model.thisReview.UserId)



    <div class="form-group">
        @Html.LabelFor(model => model.thisReview.ReviewTitle, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.thisReview.ReviewTitle, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.thisReview.ReviewTitle, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.thisReview.ReviewDetail, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.thisReview.ReviewDetail, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.thisReview.ReviewDetail, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.thisReview.Rating,
                    htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select class="Rating" name="Rating">
                <option value="1">1</option>
                <option value="2">2</option>
                <option value="3">3</option>
                <option value="4">4</option>
                <option value="5">5</option>
                <option value="6">6</option>
                <option value="7">7</option>
                <option value="8">8</option>
                <option value="9">9</option>
                <option value="10">10</option>
            </select>
            <input type="hidden" class="initialRating" value="@Model.thisReview.Rating" />
            @Html.ValidationMessageFor(model => model.thisReview.Rating, "",
                            new { @class = "text-danger" })
        </div>
    </div>





    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
